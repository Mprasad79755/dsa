#include <stdio.h>
#include <stdlib.h>

#define MAX 50

int a[MAX][MAX], n, visited[MAX];
int q[MAX], front = -1, rear = -1;
int s[MAX], top = -1;

void creategraph() {
    int i, j;
    printf("\nEnter the number of vertices in the graph: ");
    scanf("%d", &n);
    printf("\nEnter the adjacency matrix:\n");
    for (i = 0; i < n; i++)
        for (j = 0; j < n; j++)
            scanf("%d", &a[i][j]);
}

void bfs(int start) {
    int i, cur;
    for (i = 0; i < n; i++)
        visited[i] = 0;

    visited[start] = 1;
    q[++rear] = start;

    printf("\nNodes reachable from starting vertex %d are: ", start);
    while (front != rear) {
        cur = q[++front];
        printf("%d ", cur);

        for (i = 0; i < n; i++) {
            if (a[cur][i] == 1 && !visited[i]) {
                visited[i] = 1;
                q[++rear] = i;
            }
        }
    }

    // Check for unreachable vertices
    for (i = 0; i < n; i++) {
        if (!visited[i])
            printf("\nThe vertex that is not reachable is %d", i);
    }
}

void dfs(int start) {
    int i;

    visited[start] = 1;
    printf("%d ", start);

    for (i = 0; i < n; i++) {
        if (a[start][i] == 1 && !visited[i]) {
            dfs(i);
        }
    }
}

int main() {
    int ch, start, i;

    creategraph();

    do {
        printf("\n\n~~~ Menu ~~~");
        printf("\n1. BFS: Print all nodes reachable from a given starting node");
        printf("\n2. DFS: Print all nodes reachable from a given starting node");
        printf("\n3. Exit");
        printf("\nEnter your choice: ");
        scanf("%d", &ch);

        switch (ch) {
            case 1:
                printf("\nEnter the starting vertex (0 to %d): ", n - 1);
                scanf("%d", &start);
                if (start < 0 || start >= n) {
                    printf("Invalid starting vertex!\n");
                } else {
                    bfs(start);
                }
                break;

            case 2:
                for (i = 0; i < n; i++)
                    visited[i] = 0;

                printf("\nEnter the starting vertex (0 to %d): ", n - 1);
                scanf("%d", &start);
                if (start < 0 || start >= n) {
                    printf("Invalid starting vertex!\n");
                } else {
                    printf("\nNodes reachable from starting vertex %d are: ", start);
                    dfs(start);
                }
                break;

            case 3:
                printf("\nExiting...\n");
                exit(0);

            default:
                printf("\nPlease enter a valid choice!\n");
        }
    } while (ch != 3);

    return 0;
}
